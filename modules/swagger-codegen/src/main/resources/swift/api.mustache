{{#operations}}//
// {{classname}}.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Alamofire
import PromiseKit
{{#description}}

    /** {{description}} */{{/description}}
class {{classname}} {
    let basePath = "{{basePath}}"

{{#operation}}
    /** {{#summary}}
     {{{summary}}}
     {{/summary}}
     - {{httpMethod}} {{path}}{{#notes}}
     - {{{notes}}}{{/notes}}{{#subresourceOperation}}
     - subresourceOperation: {{subresourceOperation}}{{/subresourceOperation}}{{#defaultResponse}}
     - defaultResponse: {{defaultResponse}}{{/defaultResponse}}{{#authMethods}}
     - authMethods: {{authMethods}}{{/authMethods}}{{#responseHeaders}}
     - responseHeaders: {{responseHeaders}}{{/responseHeaders}}{{#examples}}
     - examples: {{{examples}}}{{/examples}}{{#externalDocs}}
     - externalDocs: {{externalDocs}}{{/externalDocs}}
     {{#allParams}}
     :param: {{paramName}} ({{#isFormParam}}form{{/isFormParam}}{{#isQueryParam}}query{{/isQueryParam}}{{#isPathParam}}path{{/isPathParam}}{{#isHeaderParam}}header{{/isHeaderParam}}{{#isBodyParam}}body{{/isBodyParam}}) {{description}}{{/allParams}}

     :returns: Promise<Response<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Empty{{/returnType}}>> {{description}}
     */
    func {{operationId}}({{#allParams}}{{paramName}}: {{dataType}}{{^required}}?{{/required}}{{#hasMore}}, {{/hasMore}}{{/allParams}}) -> Promise<Response<{{#returnType}}{{{returnType}}}{{/returnType}}{{^returnType}}Empty{{/returnType}}>> {
        var path = "{{path}}"{{#pathParams}}
        path = path.stringByReplacingOccurrencesOfString("{{=<% %>=}}{<%paramName%>}<%={{ }}=%>", withString: "\({{paramName}})", options: .LiteralSearch, range: nil){{/pathParams}}
        let url = basePath + path
        {{#bodyParam}}
        let nulableParameters: [String:AnyObject?] = {{paramName}}.encode() as! [String:AnyObject]{{/bodyParam}}{{^bodyParam}}
        let nulableParameters: [String:AnyObject?] = [{{#queryParams}}
            "{{paramName}}": {{paramName}}{{#hasMore}},{{/hasMore}}{{/queryParams}}{{^queryParams}}:{{/queryParams}}
        ]{{/bodyParam}}
        var parameters = [String:AnyObject]()
        for (key, nullableValue) in nulableParameters {
            if let value: AnyObject = nullableValue {
                parameters[key] = value
            }
        }

        return Alamofire{{#bodyParam}}
            .request(.{{httpMethod}}, url, parameters: parameters, encoding: .JSON){{/bodyParam}}{{^bodyParam}}
            .request(.{{httpMethod}}, url, parameters: parameters, encoding: .URL){{/bodyParam}}
            .responsePromise()
    }

{{/operation}}
}
{{/operations}}
